AWSTemplateFormatVersion: "2010-09-09"
Description: "Deploy React Frontend to S3 with CloudFront for HTTPS"

Resources:
  ReactAppBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: "my-react-app-bucket-varma-1"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      WebsiteConfiguration:
        IndexDocument: "index.html"
        ErrorDocument: "index.html"
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ["*"]
            AllowedMethods: ["GET", "HEAD"]
            AllowedOrigins: ["*"]
            MaxAge: 3000

  BucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref ReactAppBucket
      PolicyDocument:
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "cloudfront.amazonaws.com"
            Action: "s3:GetObject"
            Resource: !Sub "arn:aws:s3:::${ReactAppBucket}/*"
            Condition:
              StringEquals:
                "AWS:SourceArn": !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}"

  CloudFrontOAC:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub "OAC-${ReactAppBucket}"
        Description: "OAC for CloudFront to access S3 bucket securely"
        SigningProtocol: sigv4
        SigningBehavior: always
        OriginAccessControlOriginType: s3

  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt ReactAppBucket.RegionalDomainName
            Id: S3Origin
            S3OriginConfig: {}  # âœ… Correct way to use OAC
            OriginAccessControlId: !Ref CloudFrontOAC
        Enabled: true
        DefaultRootObject: "index.html"
        HttpVersion: http2
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /fallback.json
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /fallback.json
        PriceClass: PriceClass_100
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

Outputs:
  WebsiteURL:
    Description: "Original S3 website URL (will be restricted)"
    Value: !Sub "http://${ReactAppBucket}.s3-website.${AWS::Region}.amazonaws.com"
  
  CloudFrontURL:
    Description: "CloudFront Distribution Domain Name"
    Value: !GetAtt CloudFrontDistribution.DomainName
  
  BucketName:
    Description: "Name of the S3 bucket containing the React app"
    Value: !Ref ReactAppBucket